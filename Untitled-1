server.route({
        method: 'POST',
        path: version + '/requests/',
        config: {
            description: 'Create New Request ',
            notes: 'Create a New Request for any of the users',
            tags: ['api','requests'],
            plugins: {
                'hapi-swagger': {
                    payloadType: 'json'
                }
            },
            validate: {
                payload: RequestSchema.RequestCreatePayload
            },
            handler: (request, h) => RouteHandler.createRequest(request, h)
        }
    });

    server.route({
        method: 'PUT',
        path: version + '/requests/{request_id}/',
        config: {
            description: 'Update an Existing Request',
            notes: 'Update an Request for any of the users',
            tags: ['api','requests'],
            plugins: {
                'hapi-swagger': {
                    payloadType: 'json'
                }
            },
            validate: {
                payload: RequestSchema.RequestCreatePayload,
                params: RequestSchema.RequestIdParam
            },
            handler: (request, h) => RouteHandler.updateRequest(request, h)
        }
    });

    server.route({
        method: 'GET',
        path: version + '/users/{user_id}/requests',
        config: {
            description: 'Get Requests for the User',
            notes: 'Get all the Requests for the user',
            tags: ['api','requests'],
            plugins: {
                'hapi-swagger': {
                    payloadType: 'param'
                }
            },
            validate: {
                params: UserSchema.userIdParam
            },
            handler: (request, h) => RouteHandler.getRequests(request, h)
        }
    });

     server.route({
        method: 'GET',
        path: version + '/users/{user_id}/card/requests',
        config: {
            description: 'Get Requests for the User',
            notes: 'Get all the Requests for the user',
            tags: ['api','requests'],
            plugins: {
                'hapi-swagger': {
                    payloadType: 'param'
                }
            },
            validate: {
                params: UserSchema.userIdParam
            },
            handler: (request, h) => RouteHandler.getRequests(request, h)
        }
    });